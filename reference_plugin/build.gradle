apply plugin: 'groovy'

dependencies {
  implementation gradleApi()
  implementation localGroovy()
  implementation 'com.android.tools.build:gradle:3.1.4'
  implementation 'com.android.tools.build:gradle-api:3.1.4'
  implementation 'commons-io:commons-io:2.6'
  implementation 'commons-codec:commons-codec:1.10'
  //noinspection GradleDependency
  implementation 'org.ow2.asm:asm:6.2.1'
  //noinspection GradleDependency
  implementation 'org.ow2.asm:asm-util:6.2.1'
  //noinspection GradleDependency
  implementation 'org.ow2.asm:asm-commons:6.2.1'
//  implementation 'com.quinn.hunter:hunter-transform:0.9.0'
  implementation 'org.jdom:jdom2:2.0.6'
}

repositories {
  google()
  jcenter()
  mavenCentral()
}


//apply plugin: 'maven'
//group='com.yan.referencecount'
//version='0.0.1'
//uploadArchives {
//  repositories {
//    mavenDeployer {
//      repository(url: uri('plugins'))
//    }
//  }
//}

def userName
def userKey
File file = rootProject.file('local.properties')
if (file.exists()) {
  //加载资源
  InputStream inputStream = rootProject.file('local.properties').newDataInputStream();
  Properties properties = new Properties()
  properties.load(inputStream)

  if (properties.containsKey("bintray.user")) {
    userName = properties.getProperty("bintray.user")
  }
  if (properties.containsKey("bintray.apikey")) {
    userKey = properties.getProperty("bintray.apikey")
  }
}

group 'com.yan.referencecount'
version '1.0.9'

apply plugin: 'maven-publish'

//源代码打包任务
task sourcesJar(type: Jar) {
  baseName 'test'
  classifier 'sources' //分类器,区分其他jar包
  from sourceSets.main.allSource
}

//文档包任务
task docJar(type: Jar, dependsOn: [javadoc, groovydoc]) {
  baseName 'test'
  classifier 'doc' //分类器,区分其他jar包
  from javadoc.destinationDir, groovydoc.destinationDir
}

//配置工程工件,也就是jar产出的配置
artifacts {
  archives sourcesJar
  archives docJar
}

//上传配置
publishing {
  publications {
    plugin(MavenPublication) {
      from components.java
      //如果不指定，默认就是工程名
      artifactId 'reference_plugin'

      artifact sourcesJar
      artifact docJar

      //pom文件配置
      pom.withXml {
        def root = asNode()
        def licensesNode = root.appendNode('licenses').appendNode('license')
        licensesNode.appendNode('name', 'Apache License, Version 2.0')
        licensesNode.appendNode('url', 'https://www.apache.org/licenses/LICENSE-2.0.txt')
        licensesNode.appendNode('distribution', 'repo')
        licensesNode.appendNode('comments', 'A business-friendly OSS license')
      }
    }
  }
}

apply plugin: 'com.jfrog.bintray'

bintray {
  user = userName
  key = userKey
  //上传的内容
  publications = ['plugin']
  pkg {
    repo = 'maven' //需要上传的仓库名
    name = 'reference_plugin' //上传到jcenter的项目名
    userOrg = 'yan157' //可选的,不传的话默认是上面的user
    licenses = ['Apache-2.0'] //开源许可
    //这里的地址是不会验证的,随便输入都可以,不配置也可以
    vcsUrl = 'https://github.com/genius158/ReferenceDump.git'
    version {
      //name = '1.0-Final'//使用外面的version
      desc = 'reference_plugin'
      released = new Date()
      vcsTag = version //版本控制里面的版本控制,比如svn,git
      attributes = ['gradle-plugin': version]
    }
  }
}